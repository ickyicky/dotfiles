" Doman vimrc 

set nocompatible              " required by Vundle
set encoding=utf-8            " for better polish letters
set number relativenumber     " relative number - gamechanger
set clipboard=unnamedplus     " to yank into clipboard easily
filetype off                  " required by Vundle

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

" add all your plugins here
Plugin 'tmhedberg/SimpylFold'
Plugin 'sainnhe/edge'
Plugin 'preservim/nerdtree'
Plugin 'dense-analysis/ale'
Plugin 'chriskempson/base16-vim'
Plugin 'ryanoasis/vim-devicons'

" best autocomplete
Bundle 'Valloric/YouCompleteMe'
" ...

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

" Specify areas where screen splits
set splitbelow
set splitright
set mouse=a

" Enable folding
set foldmethod=indent
set foldlevel=99

" PEP8 indent
au BufNewFile,BufRead *.py
    \ set tabstop=4 |
    \ set softtabstop=4 |
    \ set shiftwidth=4 |
    \ set textwidth=0 |
    \ set expandtab |
    \ set autoindent |
    \ set fileformat=unix

" frontend indent etc
au BufNewFile,BufRead *.js, *.html, *.css, *.scss
    \ set tabstop=2 |
    \ set softtabstop=2 |
    \ set shiftwidth=2

au BufRead, BufNewFile *.py,*.pyw,*.c,*.h match BadWhitespace /\s\+$/

" better fold
let g:SimpylFold_docstring_preview=1

" ALE config
let g:ale_linters = {
			\ 'python': ['pyls', 'flake8'],
			\}

let g:ale_fixers = {
			\ '*': ['trim_whitespace'],
			\ 'python': ['black'],
			\ 'css': ['prettier'],
			\ 'scss': ['prettier'],
			\ 'html': ['prettier'],
			\ 'javascript': ['prettier'],
			\ 'json': ['prettier'],
			\ 'php': ['prettier'],
			\ 'yaml': ['prettier'],
			\}

" ale completion is really annoying
let g:ale_completion_enabled = 0
let g:ale_completion_tsserver_autoimport = 0
let g:ale_set_highlights = 0

" youcompleteme
let g:ycm_autoclose_preview_window_after_completion=1
map <C-g>  :YcmCompleter GoToDefinitionElseDeclaration<CR>

" Python syntax highlighting
let python_highlight_all=1
syntax on

" Theme config
set termguicolors
colorscheme base16-ocean

" nerdtree settings
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
autocmd VimEnter * if argc() == 1 && isdirectory(argv()[0]) && !exists("s:std_in") | exe 'NERDTree' argv()[0] | wincmd p | ene | exe 'cd '.argv()[0] | endif
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
" ignoce *.pyc
let NERDTreeIgnore=['\.pyc$', '\~$']

" cursor
let &t_SI.="\e[5 q" "SI = INSERT mode
let &t_SR.="\e[4 q" "SR = REPLACE mode
let &t_EI.="\e[1 q" "EI = NORMAL mode (ELSE)

" KEYBINDINGS AND MAPS
" <Ctrl-s> redraws the screen and removes any search highlighting.
nnoremap <silent> <C-s> :nohl<CR><C-l>

" keybinding for nerdtree
map <C-n> :NERDTreeToggle<CR>

" ALE key mapping
nmap <silent> <F5> <Plug>(ale_previous_wrap)
nmap <silent> <C-F5> <Plug>(ale_next_wrap)

" Enable folding with the spacebar
nnoremap <space> za

" Moving between splits
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" R does d but without replacing yanked text
nnoremap R "_d
